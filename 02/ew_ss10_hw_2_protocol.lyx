#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
    \usepackage{alltt}
    \usepackage{color}
    \usepackage{fullpage}
    \definecolor{string}{rgb}{0.7,0.0,0.0}
    \definecolor{comment}{rgb}{0.13,0.54,0.13}
    \definecolor{keyword}{rgb}{0.0,0.0,1.0}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Einfuehrung in die Wissensverarbeitung, SS 10
\end_layout

\begin_layout Author
Josef Koller, Daniel Ladenhauf, Christof Sirk
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Gradient descent and Backpropagation
\end_layout

\begin_layout Subsection
Gradient Descent
\end_layout

\begin_layout Subsubsection
Gradient and Gradient Descent Update Rules
\end_layout

\begin_layout Standard
\begin_inset Formula $\nabla f=\begin{array}{c}
-10(w_{1}-1)e^{-5(0.5(w_{1}-1)\text{²}+(w_{2}-1)\text{²})}+0.8(w_{1}+1)e^{-0.1(4(w_{1}+1)\text{²}+0.5(w_{2})\text{²}))}\\
-4(w_{1}-1)e^{-5(0.5(w_{1}-1)\text{²}+(w_{2}-1)\text{²})}+0.1w_{2}e^{-0.1(4(w_{1}+1)\text{²}+0.5(w_{2})\text{²}))}\end{array}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{keyword}{function} [ result ] = f( w1, w2 ) 
\end_layout

\begin_layout Plain Layout

0002     function1 = -2 * exp(-5 * 
\backslash
textcolor{keyword}{
\backslash
underline{...}} 
\end_layout

\begin_layout Plain Layout

0003         (0.5 * (w1 - 1).
\backslash
^{}2 + (w2 - 1).
\backslash
^{}2)); 
\end_layout

\begin_layout Plain Layout

0004     function2 = - exp(-0.1* 
\backslash
textcolor{keyword}{
\backslash
underline{...}} 
\end_layout

\begin_layout Plain Layout

0005         (4 * (w1 + 1).
\backslash
^{}2 + 0.5 * w2.
\backslash
^{}2)); 
\end_layout

\begin_layout Plain Layout

0006     result = function1 + function2; 
\end_layout

\begin_layout Plain Layout

0007 
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{keyword}{function} [ gradient ] = f
\backslash
_gradient() 
\end_layout

\begin_layout Plain Layout

0002     syms x; 
\end_layout

\begin_layout Plain Layout

0003     syms y; 
\end_layout

\begin_layout Plain Layout

0004     z = f(x, y); 
\end_layout

\begin_layout Plain Layout

0005  
\end_layout

\begin_layout Plain Layout

0006     fx = diff(z, x); 
\end_layout

\begin_layout Plain Layout

0007     fy = diff(z, y); 
\end_layout

\begin_layout Plain Layout

0008  
\end_layout

\begin_layout Plain Layout

0009     gradient = matlabFunction(fx, fy); 
\end_layout

\begin_layout Plain Layout

0010 
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We are using the symbolic toolkit to calculate the gradient of the function
 f.
\end_layout

\begin_layout Standard
TODO: INSERT f_gradient result here!
\end_layout

\begin_layout Standard
Gradient Descent Update Rules:
\end_layout

\begin_layout Standard
\begin_inset Formula $w_{1}=w_{1}-\eta\frac{\partial f}{\partial w_{1}}$
\end_inset

???
\end_layout

\begin_layout Standard
\begin_inset Formula $w_{2}=w_{2}-\eta\frac{\partial f}{\partial w_{2}}$
\end_inset

???
\end_layout

\begin_layout Subsubsection
Gradient Descent Minimization Algorithm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{keyword}{function} [weights, error] = gradientDescentHw2(w0, numIter,
 eta) 
\end_layout

\begin_layout Plain Layout

0002     error = zeros(numIter, 1); 
\end_layout

\begin_layout Plain Layout

0003     weights = zeros(numIter + 1, 2); 
\end_layout

\begin_layout Plain Layout

0004     weights(1, :) = w0; 
\end_layout

\begin_layout Plain Layout

0005     w = w0; 
\end_layout

\begin_layout Plain Layout

0006     gradient = f
\backslash
_gradient(); 
\end_layout

\begin_layout Plain Layout

0007     
\backslash
textcolor{keyword}{for} iteration = 1:numIter 
\end_layout

\begin_layout Plain Layout

0008         error(iteration) = f(w(1), w(2)); 
\end_layout

\begin_layout Plain Layout

0009         [dw1, dw2] = gradient(w(1), w(2)); 
\end_layout

\begin_layout Plain Layout

0010         w = w - eta * [dw1, dw2]; 
\end_layout

\begin_layout Plain Layout

0011         weights(iteration + 1, :) = w; 
\end_layout

\begin_layout Plain Layout

0012     
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout

0013 
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset

We are calculating the gradient of f only one time before we start the loop.
 In the loop we only invoke this function with the current weights.
 So if there are many iteration this solution has a better performance.
\end_layout

\begin_layout Subsubsection
Evolution of the Weightvector
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{comment}{%hw
\backslash
_2
\backslash
_1
\backslash
_3.m} 
\end_layout

\begin_layout Plain Layout

0002  
\end_layout

\begin_layout Plain Layout

0003 close all; 
\end_layout

\begin_layout Plain Layout

0004  
\end_layout

\begin_layout Plain Layout

0005 w0 = [0.2, 0.5]; 
\end_layout

\begin_layout Plain Layout

0006 eta
\backslash
_list = 0.4:-0.1:0.1; 
\backslash
textcolor{comment}{% step size} 
\end_layout

\begin_layout Plain Layout

0007  
\end_layout

\begin_layout Plain Layout

0008 plot
\backslash
_error
\backslash
_evolution(w0, eta
\backslash
_list); 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{keyword}{function} [ ] = plot
\backslash
_error
\backslash
_evolution( w0, eta
\backslash
_list ) 
\end_layout

\begin_layout Plain Layout

0002     numIter = 100; 
\end_layout

\begin_layout Plain Layout

0003     error
\backslash
_list = zeros(length(eta
\backslash
_list), numIter); 
\end_layout

\begin_layout Plain Layout

0004     colors = [
\backslash
textcolor{string}{'g'}, 
\backslash
textcolor{string}{'r'}, 
\backslash
textcolor{string}{'b'}, 
\backslash
textcolor{string}{'m'}]; 
\end_layout

\begin_layout Plain Layout

0005      
\end_layout

\begin_layout Plain Layout

0006     
\backslash
textcolor{keyword}{for} eta
\backslash
_index = 1:length(eta
\backslash
_list) 
\end_layout

\begin_layout Plain Layout

0007         subplot(2, 2, eta
\backslash
_index); 
\end_layout

\begin_layout Plain Layout

0008         eta = eta
\backslash
_list(eta
\backslash
_index); 
\end_layout

\begin_layout Plain Layout

0009         [weights, error] = gradientDescentHw2(w0, numIter, eta); 
\end_layout

\begin_layout Plain Layout

0010         plotErrorFunction(weights); 
\end_layout

\begin_layout Plain Layout

0011         title1 = title(sprintf(
\backslash
textcolor{string}{'error surface for eta 
\backslash
%0.1f'}, eta)); 
\end_layout

\begin_layout Plain Layout

0012         set(title1, 
\backslash
textcolor{string}{'FontSize'}, 14) 
\end_layout

\begin_layout Plain Layout

0013         error
\backslash
_list(eta
\backslash
_index, :) = error; 
\end_layout

\begin_layout Plain Layout

0014     
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout

0015  
\end_layout

\begin_layout Plain Layout

0016     figure; 
\end_layout

\begin_layout Plain Layout

0017     hold on; 
\end_layout

\begin_layout Plain Layout

0018     title2 = title(
\backslash
textcolor{string}{'error evolution'}); 
\end_layout

\begin_layout Plain Layout

0019     set(title2, 
\backslash
textcolor{string}{'FontSize'}, 14) 
\end_layout

\begin_layout Plain Layout

0020      
\end_layout

\begin_layout Plain Layout

0021     
\backslash
textcolor{keyword}{for} error
\backslash
_index = 1:length(error
\backslash
_list) 
\end_layout

\begin_layout Plain Layout

0022         error = error
\backslash
_list(error
\backslash
_index, :); 
\end_layout

\begin_layout Plain Layout

0023         color = colors(error
\backslash
_index); 
\end_layout

\begin_layout Plain Layout

0024         plot(1:numIter, error, color); 
\end_layout

\begin_layout Plain Layout

0025         xlabel(
\backslash
textcolor{string}{'iteration'}); 
\end_layout

\begin_layout Plain Layout

0026         ylabel(
\backslash
textcolor{string}{'error'}); 
\end_layout

\begin_layout Plain Layout

0027  
\end_layout

\begin_layout Plain Layout

0028         text = 
\backslash
textcolor{string}{'eta=
\backslash
%0.2f'}; 
\end_layout

\begin_layout Plain Layout

0029         legend(sprintf(text, eta
\backslash
_list(1)), sprintf(text, eta
\backslash
_list(2)), 
\backslash
textcolor{keyword}{
\backslash
underline{...}} 
\end_layout

\begin_layout Plain Layout

0030         sprintf(text, eta
\backslash
_list(3)), sprintf(text, eta
\backslash
_list(4)) ); 
\end_layout

\begin_layout Plain Layout

0031     
\backslash
textcolor{keyword}{end} 
\end_layout

\begin_layout Plain Layout

0032     hold off; 
\end_layout

\begin_layout Plain Layout

0033 
\backslash
textcolor{keyword}{end}   
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
bliblablo
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename 2-1-3.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Evolution of the Weightvector 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2-1-3-error-evolution.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Evolution of the error for each of the learning rates
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
sfsf
\end_layout

\begin_layout Subsubsection
Repetition of the Previous Experiment
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt} 
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{comment}{%hw
\backslash
_2
\backslash
_1
\backslash
_4.m} 
\end_layout

\begin_layout Plain Layout

0002  
\end_layout

\begin_layout Plain Layout

0003 close all; 
\end_layout

\begin_layout Plain Layout

0004  
\end_layout

\begin_layout Plain Layout

0005 w0 = [-0.2, -0.5]; 
\end_layout

\begin_layout Plain Layout

0006 eta
\backslash
_list = 4:-1:1; 
\backslash
textcolor{comment}{% step size} 
\end_layout

\begin_layout Plain Layout

0007  
\end_layout

\begin_layout Plain Layout

0008 plot
\backslash
_error
\backslash
_evolution(w0, eta
\backslash
_list); 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Standard
sf
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2-1-4.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Evolution of the weightvector for an eta value of 4.0
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
sfsf
\end_layout

\begin_layout Standard
sf
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2-1-4-error-evolution.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Evolution of the error for each of the learning rates
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
sfsf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Subsubsection*
What kind of problems occur for the different learning rates?
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Subsubsection*
When do we find a local and when a global minimum?
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Subsubsection*
Why do we need to use a completely different range for the η values for
 the two different initial weight vectors?
\end_layout

\begin_layout Standard
sfsf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Standard
sf
\end_layout

\begin_layout Subsubsection
Now we want to evaluate the effect of local mimima.
\end_layout

\begin_layout Standard
fsf
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt}
\end_layout

\begin_layout Plain Layout

0001 
\backslash
textcolor{comment}{%hw
\backslash
_2
\backslash
_1
\backslash
_5}
\end_layout

\begin_layout Plain Layout

0002 
\end_layout

\begin_layout Plain Layout

0003 close all;
\end_layout

\begin_layout Plain Layout

0004 
\end_layout

\begin_layout Plain Layout

0005 eta = 0.1;
\end_layout

\begin_layout Plain Layout

0006 numIter = 1 00;
\end_layout

\begin_layout Plain Layout

0007 GRID
\backslash
_SIZE = 40;
\end_layout

\begin_layout Plain Layout

0008 
\end_layout

\begin_layout Plain Layout

0009 minf = zeros(GRID
\backslash
_SIZE + 1, GRID
\backslash
_SIZE + 1);
\end_layout

\begin_layout Plain Layout

0010 
\end_layout

\begin_layout Plain Layout

0011 
\backslash
textcolor{keyword}{for} i = 0:GRID
\backslash
_SIZE
\end_layout

\begin_layout Plain Layout

0012     
\backslash
textcolor{keyword}{for} j = 0:GRID
\backslash
_SIZE
\end_layout

\begin_layout Plain Layout

0013         w0 = [-2 + 0.1 * i, -2 + 0.1 * j];    
\end_layout

\begin_layout Plain Layout

0014         [weights, error
\backslash
_list] = gradientDescentHw2(w0, numIter, eta);
\end_layout

\begin_layout Plain Layout

0015         error = error
\backslash
_list(end);
\end_layout

\begin_layout Plain Layout

0016         minf(i + 1, j + 1) = error;
\end_layout

\begin_layout Plain Layout

0017     
\backslash
textcolor{keyword}{end}
\end_layout

\begin_layout Plain Layout

0018 
\backslash
textcolor{keyword}{end}
\end_layout

\begin_layout Plain Layout

0019 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this script we store the minimal error of each w0 value into a matrix.
\end_layout

\begin_layout Subsubsection
Create a surface plot of these minf values.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{alltt}
\end_layout

\begin_layout Plain Layout

0020 
\backslash
textcolor{comment}{% 2
\backslash
_1
\backslash
_6}
\end_layout

\begin_layout Plain Layout

0021 
\end_layout

\begin_layout Plain Layout

0022 figure;
\end_layout

\begin_layout Plain Layout

0023 
\backslash
textcolor{comment}{%[x, y] = meshgrid(0:GRID
\backslash
_SIZE, 0:GRID
\backslash
_SIZE);}
\end_layout

\begin_layout Plain Layout

0024 temp = linspace(-2, 2, GRID
\backslash
_SIZE + 1);
\end_layout

\begin_layout Plain Layout

0025 [x, y] = meshgrid(temp, temp);
\end_layout

\begin_layout Plain Layout

0026 
\end_layout

\begin_layout Plain Layout

0027 handle = surf(x, y, minf);
\end_layout

\begin_layout Plain Layout

0028 xlabel(
\backslash
textcolor{string}{'w1'});
\end_layout

\begin_layout Plain Layout

0029 ylabel(
\backslash
textcolor{string}{'w2'});
\end_layout

\begin_layout Plain Layout

0030 zlabel(
\backslash
textcolor{string}{'error'});
\end_layout

\begin_layout Plain Layout

0031 
\end_layout

\begin_layout Plain Layout

0032 
\backslash
textcolor{keyword}{global}
\backslash
_min
\backslash
_point
\backslash
_count = sum(sum(minf < -2 ));
\end_layout

\begin_layout Plain Layout

0033 
\backslash
textcolor{keyword}{global}
\backslash
_min
\backslash
_point
\backslash
_percentage = 
\backslash
textcolor{keyword}{global}
\backslash
_min
\backslash
_point
\backslash
_count / GRID
\backslash
_SIZE 
\backslash
^{} 2 * 1 
\end_layout

\begin_layout Plain Layout


\backslash
end{alltt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The two scripts above are located in the same file.
 So the calculated minf matrix is available in the second script.
 We are using the linspace-function to get a meshgrid, with the correct
 scaling for the plot.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename plot11.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
A surface plot of the minimal error values
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
sfsf
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename plot12.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The above plot from another point of view.
 We also marked the minimal value here.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
In which area do we find the global and in which area only the local minimum?
\end_layout

\begin_layout Standard
TODO: CONTINUE THIS
\end_layout

\begin_layout Subsection
Backpropagation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
layer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a_{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{j}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z_{j}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hidden (1)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\noindent
\begin_inset Formula $a_{j}^{(1)}=\left(x-\mu_{j}\right)^{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\noindent
\begin_inset Formula $h_{j}^{(1)}=e^{a_{j^{(1)}}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\noindent
\begin_inset Formula $z_{j}^{(1)}=e^{\left(x-\mu_{j}\right)^{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
output (2)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a_{j}^{(2)}=\sum_{k=1}^{M}w_{jk}\centerdot z_{j}^{(1)}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $h_{j}^{(2)}=tanh\left(a_{j}^{(2)}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $z_{j}^{(2)}=h_{j}^{(2)}\left(a_{j}^{(2)}\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
\delta_{j}^{(2)}=\frac{\partial E}{\partial a_{j^{(2)}}}=\frac{\partial\sum_{k=1}^{K}\left(z_{k}^{(2)}-y_{k}^{(2)}\right)^{2}}{\partial a_{j}^{(2)}}=2\left(z_{j}^{(2)}-y_{j}^{(2)}\right)h^{\prime(2)}\left(a_{j}^{(2)}\right)=2\left(tanh\left(a_{j}^{(2)}\right)-y_{j}^{(2)}\right)\left(1-tanh\left(a_{j}^{(2)}\right)\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
\Delta w_{kj}=\eta\delta_{j}^{(2)}z_{j}^{(2)}\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
\delta_{j}^{(1)}=h^{\prime(1)}\left(a_{j}^{(1)}\right)\sum_{l=1}^{K}\delta_{l}^{(2)}w_{lj}^{(2)}\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
\Delta\mu_{j}=\eta\delta_{j}^{(1)}z_{j}^{(1)}\]

\end_inset


\end_layout

\end_body
\end_document
